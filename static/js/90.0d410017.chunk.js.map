{"version":3,"file":"static/js/90.0d410017.chunk.js","mappings":"+PAEaA,E,OAAkBC,GAAAA,GAAH,qL,SC6C5B,EAxCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EASL,OALA,mCAAC,qGACmBM,EAAAA,EAAAA,IAAeN,GADlC,OACOO,EADP,OAECH,EAAeG,EAAIC,KAAKC,SAFzB,2CAAD,uDAKO,WAEN,CACF,GAAE,CAACT,KAGF,8BAC0B,IAAvBG,EAAYO,QACX,uEAEA,SAACZ,EAAD,UACGK,EAAYQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,2BACE,0BACE,oCACCD,MAEH,uBAAIC,MALGF,EADM,OAa1B,C,8LC3CKG,EAAM,mCAKL,SAAeC,IAAtB,+B,aAAO,O,oBAAA,6GAEoBC,EAAAA,GAAAA,IAAA,sBAAiC,CACtDC,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,GAPJ,gCASHC,QAAQC,IAAI,QAAZ,MATG,gFAeA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAgCvB,GAAhC,gGAEoBiB,EAAAA,GAAAA,IAAA,gBAAmBjB,GAAW,CACnDkB,OAAQ,CACNC,QAASJ,EACTS,SAAU,WALX,cAEGJ,EAFH,yBASIA,GATJ,gCAWHC,QAAQC,IAAI,QAAZ,MAXG,gFAiBA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAAkCC,GAAlC,gGAEoBT,EAAAA,GAAAA,IAAA,eAA0B,CAC/CC,OAAQ,CACNC,QAASJ,EACTS,SAAU,QACVG,MAAOD,EACPE,eAAe,EACfC,KAAM,KARP,cAEGT,EAFH,yBAYIA,GAZJ,gCAcHC,QAAQC,IAAI,QAAZ,MAdG,gFAoBA,SAAeQ,EAAtB,kC,aAAO,O,oBAAA,WAA2B9B,GAA3B,gGAEoBiB,EAAAA,GAAAA,IAAA,gBAAmBjB,EAAnB,YAAsC,CAC3DkB,OAAQ,CACNC,QAASJ,EACTS,SAAU,WALX,cAEGJ,EAFH,yBASIA,GATJ,gCAWHC,QAAQC,IAAI,QAAZ,MAXG,gFAiBA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BN,GAA9B,gGAEoBiB,EAAAA,GAAAA,IAAA,gBAAmBjB,EAAnB,YAAsC,CAC3DkB,OAAQ,CACNC,QAASJ,EACTS,SAAU,QACVK,KAAM,KANP,cAEGT,EAFH,yBAUIA,GAVJ,gCAYHC,QAAQC,IAAI,QAAZ,MAZG,gFAzEPL,EAAAA,GAAAA,SAAAA,QAAyB,+B","sources":["components/Reviews.styles.js","components/Reviews.jsx","components/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsInfoList = styled.ul`\n  padding: 20px 45px;\n  margin: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n\n  p {\n    margin-bottom: 10px;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { reviewsRequest } from '../components/api';\nimport { ReviewsInfoList } from './Reviews.styles';\n//компонент Reviews, інформація про огляди. Рендериться на сторінці MovieDetails.\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsInfo, setReviewsInfo] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    (async function reviewsInfo() {\n      const res = await reviewsRequest(movieId);\n      setReviewsInfo(res.data.results);\n    })();\n\n    return () => {\n      // second\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {reviewsInfo.length === 0 ? (\n        <div>We don`t have information for this movie</div>\n      ) : (\n        <ReviewsInfoList>\n          {reviewsInfo.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>\n                <b>Author: </b>\n                {author}\n              </p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ReviewsInfoList>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = '25b04cbcbe0fdb69c9de2ffa5b80bb64';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// приклад список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\nexport async function trendingmoviesRequest() {\n  try {\n    const response = await axios.get(`trending/movie/day?`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n// запит повної інформації про фільм для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport async function movieInfoRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n// пошук фільму за ключовим словом на сторінці фільмів.\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport async function moviesQueryRequest(search) {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n        query: search,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n//запит інформації про акторський склад для сторінки кінофільму.\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport async function castRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n//запит оглядів для сторінки кінофільму.\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\nexport async function reviewsRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n"],"names":["ReviewsInfoList","styled","movieId","useParams","useState","reviewsInfo","setReviewsInfo","useEffect","reviewsRequest","res","data","results","length","map","id","author","content","KEY","trendingmoviesRequest","axios","params","api_key","response","console","log","movieInfoRequest","language","moviesQueryRequest","search","query","include_adult","page","castRequest"],"sourceRoot":""}