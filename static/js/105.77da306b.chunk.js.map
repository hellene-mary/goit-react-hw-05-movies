{"version":3,"file":"static/js/105.77da306b.chunk.js","mappings":"4QAEaA,EAAWC,EAAAA,GAAAA,GAAH,gQAeRC,EAAUD,EAAAA,GAAAA,IAAH,0G,SC8CpB,EAvDa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EASL,OALA,mCAAC,qGACmBM,EAAAA,EAAAA,IAAYN,GAD/B,OACOO,EADP,OAECH,EAAYG,EAAIC,KAAKC,MAFtB,2CAAD,uDAKO,WAEN,CACF,GAAE,CAACT,KAKF,8BACuB,IAApBG,EAASO,QACR,uEAEA,SAACb,EAAD,UACGM,EAASQ,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACpC,OACE,0BACGA,GACC,gBACEC,IAAK,kCAAoCD,EACzCE,IAAKH,EACLI,MAAO,OAGT,SAACnB,EAAD,8BAEF,0BACE,uCACCc,MAEH,0BACE,iCADF,IACgBC,OAfTF,EAmBZ,OAKV,C,8LC3DKO,EAAM,mCAKL,SAAeC,IAAtB,+B,aAAO,O,oBAAA,6GAEoBC,EAAAA,GAAAA,IAAA,sBAAiC,CACtDC,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,GAPJ,gCASHC,QAAQC,IAAI,QAAZ,MATG,gFAeA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAgC3B,GAAhC,gGAEoBqB,EAAAA,GAAAA,IAAA,gBAAmBrB,GAAW,CACnDsB,OAAQ,CACNC,QAASJ,EACTS,SAAU,WALX,cAEGJ,EAFH,yBASIA,GATJ,gCAWHC,QAAQC,IAAI,QAAZ,MAXG,gFAiBA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAAkCC,GAAlC,gGAEoBT,EAAAA,GAAAA,IAAA,eAA0B,CAC/CC,OAAQ,CACNC,QAASJ,EACTS,SAAU,QACVG,MAAOD,EACPE,eAAe,EACfC,KAAM,KARP,cAEGT,EAFH,yBAYIA,GAZJ,gCAcHC,QAAQC,IAAI,QAAZ,MAdG,gFAoBA,SAAepB,EAAtB,kC,aAAO,O,oBAAA,WAA2BN,GAA3B,gGAEoBqB,EAAAA,GAAAA,IAAA,gBAAmBrB,EAAnB,YAAsC,CAC3DsB,OAAQ,CACNC,QAASJ,EACTS,SAAU,WALX,cAEGJ,EAFH,yBASIA,GATJ,gCAWHC,QAAQC,IAAI,QAAZ,MAXG,gFAiBA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA8BlC,GAA9B,gGAEoBqB,EAAAA,GAAAA,IAAA,gBAAmBrB,EAAnB,YAAsC,CAC3DsB,OAAQ,CACNC,QAASJ,EACTS,SAAU,QACVK,KAAM,KANP,cAEGT,EAFH,yBAUIA,GAVJ,gCAYHC,QAAQC,IAAI,QAAZ,MAZG,gFAzEPL,EAAAA,GAAAA,SAAAA,QAAyB,+B","sources":["components/Cast.styles.js","components/Cast.jsx","components/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 16px;\n\n  margin: 0 auto;\n  padding: 10px;\n  list-style: none;\n\n  img {\n    padding: 10px;\n  }\n`;\n\nexport const NoImage = styled.div`\n  width: 200px;\n  height: 300px;\n  background-color: #727272;\n  margin: 10px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { castRequest } from '../components/api';\nimport { CastList, NoImage } from './Cast.styles';\n\n//  компонент Cast, інформація про акторський склад. Рендериться на сторінці MovieDetails.\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castInfo, setCastInfo] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    (async function castInfo() {\n      const res = await castRequest(movieId);\n      setCastInfo(res.data.cast);\n    })();\n\n    return () => {\n      // second\n    };\n  }, [movieId]);\n\n  // const { character, name, profile_path } = castInfo;\n\n  return (\n    <>\n      {castInfo.length === 0 ? (\n        <div>We don`t have information for this movie</div>\n      ) : (\n        <CastList>\n          {castInfo.map(({ id, character, name, profile_path }) => {\n            return (\n              <li key={id}>\n                {profile_path ? (\n                  <img\n                    src={'https://image.tmdb.org/t/p/w500' + profile_path}\n                    alt={name}\n                    width={200}\n                  ></img>\n                ) : (\n                  <NoImage>Image not find</NoImage>\n                )}\n                <p>\n                  <b>Character: </b>\n                  {character}\n                </p>\n                <p>\n                  <b>Name:</b> {name}\n                </p>\n              </li>\n            );\n          })}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = '25b04cbcbe0fdb69c9de2ffa5b80bb64';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// приклад список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\nexport async function trendingmoviesRequest() {\n  try {\n    const response = await axios.get(`trending/movie/day?`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n// запит повної інформації про фільм для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport async function movieInfoRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n// пошук фільму за ключовим словом на сторінці фільмів.\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport async function moviesQueryRequest(search) {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n        query: search,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n//запит інформації про акторський склад для сторінки кінофільму.\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport async function castRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n//запит оглядів для сторінки кінофільму.\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\nexport async function reviewsRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n"],"names":["CastList","styled","NoImage","movieId","useParams","useState","castInfo","setCastInfo","useEffect","castRequest","res","data","cast","length","map","id","character","name","profile_path","src","alt","width","KEY","trendingmoviesRequest","axios","params","api_key","response","console","log","movieInfoRequest","language","moviesQueryRequest","search","query","include_adult","page","reviewsRequest"],"sourceRoot":""}