{"version":3,"file":"static/js/134.c3e2be8d.chunk.js","mappings":"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","sources":["components/Layout.styles.js","components/api.js","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 15px;\n`;\n\nexport const Header = styled.header`\n  padding: 15px 30px;\n  display: flex;\n  gap: 20px;\n  box-shadow: 0 0 10px 4px hsl(0deg 0% 38% / 75%); ;\n`;\n\nexport const NavItem = styled(NavLink)`\n  font-size: 700;\n  /* border: 1px solid black; */\n  display: flex;\n  font-size: 20px;\n  font-weight: 700;\n  text-decoration: none;\n  color: black;\n\n  &.active {\n    color: #ff4388;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    text-decoration: underline;\n  }\n`;\n\nexport const Form = styled.form`\n  /* padding: 25px 0 0 25px; */\n  display: flex;\n  gap: 15px;\n\n  > input {\n    width: 350px;\n    padding: 7px;\n  }\n`;\n\nexport const Box = styled.div`\n  border-bottom: 1px solid #727272;\n  padding: 15px;\n\n  p {\n    padding-left: 15px;\n  }\n`;\n\nexport const MoreInfoList = styled.ul`\n  text-decoration: none;\n  list-style: none;\n  margin-top: 15px;\n  padding-left: 20px;\n`;\n\nexport const MoreInfoLink = styled(NavLink)`\n  margin: 0;\n  padding: 5px;\n  display: block;\n\n  color: black;\n  text-decoration: none;\n  list-style: none;\n\n  &.active {\n    color: #ff4388;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    text-decoration: underline;\n  }\n`;\n\nexport const GoBack = styled(Link)`\n  /* border: 1px solid black; */\n  padding: 3px;\n\n  display: block;\n  width: 100px;\n  text-align: center;\n\n  svg {\n    width: 20px;\n    height: 15px;\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  padding: 20px;\n`;\n","import axios from 'axios';\n\nconst KEY = '25b04cbcbe0fdb69c9de2ffa5b80bb64';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// приклад список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\nexport async function trendingmoviesRequest() {\n  try {\n    const response = await axios.get(`trending/movie/day?`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n// запит повної інформації про фільм для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport async function movieInfoRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n// пошук фільму за ключовим словом на сторінці фільмів.\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport async function moviesQueryRequest(search) {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n        query: search,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n//запит інформації про акторський склад для сторінки кінофільму.\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport async function castRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n//запит оглядів для сторінки кінофільму.\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\nexport async function reviewsRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nimport { Container, Form, MoviesList } from '../components/Layout.styles';\nimport { moviesQueryRequest } from '../components/api';\n\n// сторінка пошуку кінофільмів за ключовим словом.\n\nconst Movies = () => {\n  // const [query, setQuery] = useState('');\n  const [moviesFound, setMoviesFound] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('search');\n  const location = useLocation();\n\n  function handlerQuery(evt) {\n    evt.preventDefault();\n\n    const form = evt.currentTarget;\n    const searchQuery = form.elements.search.value;\n\n    setSearchParams({ search: searchQuery });\n\n    form.reset();\n  }\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    (async function searchMovies() {\n      const res = await moviesQueryRequest(query);\n      const movies = res.data.results;\n      if (movies.length === 0) {\n        console.log('Not result');\n        return;\n      }\n      setMoviesFound(movies);\n    })(query);\n    return () => {\n      // second\n    };\n  }, [query]);\n\n  return (\n    <Container>\n      <Form onSubmit={handlerQuery}>\n        <input\n          name=\"search\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n        ></input>\n        <button type=\"submit\">Search</button>\n      </Form>\n      {query && (\n        <MoviesList>\n          {moviesFound.map(({ id, name, title }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }} key={id}>\n                {title} {name}\n              </Link>\n            </li>\n          ))}\n        </MoviesList>\n      )}\n    </Container>\n  );\n};\n\nexport default Movies;\n"],"names":["Container","styled","Header","NavItem","NavLink","Form","Box","MoreInfoList","MoreInfoLink","GoBack","Link","MoviesList","KEY","trendingmoviesRequest","axios","params","api_key","response","console","log","movieInfoRequest","movieId","language","moviesQueryRequest","search","query","include_adult","page","castRequest","reviewsRequest","useState","moviesFound","setMoviesFound","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","res","movies","data","results","length","onSubmit","evt","preventDefault","form","currentTarget","searchQuery","elements","value","reset","name","type","autoComplete","autoFocus","placeholder","map","id","title","to","state","from"],"sourceRoot":""}